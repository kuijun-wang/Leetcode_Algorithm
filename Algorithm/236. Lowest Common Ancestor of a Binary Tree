    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        ans = None
        
        def recurse_tree(current_node):
            nonlocal ans
            if current_node == None:
                return False
            
            left = recurse_tree(current_node.left)
            right = recurse_tree(current_node.right)
            
            mid = current_node == p or current_node == q
            
            # if the p and q were find in this binary node:
            if mid + left + right >=2:
                ans = current_node
                
            # return 0 or 1
            return mid or left or right 
        
        recurse_tree(root)
        return ans
