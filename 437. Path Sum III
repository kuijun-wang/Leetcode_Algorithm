def pathSum(self, root: TreeNode, targetSum: int) -> int:
        
    def preorder(root, curr_sum):
        nonlocal count
        if root == None:
            return 
        
        curr_sum += root.val
        
        if curr_sum == targetSum:
            count += 1
        
        count += h[curr_sum - targetSum]
        
        h[curr_sum] += 1
        
        preorder(root.left, curr_sum)
        preorder(root.right, curr_sum)
        
        h[curr_sum] -= 1
        
    count = 0
    h = defaultdict(int)
    preorder(root, 0)
    
    return count
