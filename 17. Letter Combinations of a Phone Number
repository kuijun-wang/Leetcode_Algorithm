class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        l_dict = {"2":["a", "b", "c"], "3":["d", "e", "f"], "4":["g", "h", "i"], "5":["j", "k", "l"], "6":["m", "n", "o"], "7":["p", "q", "r", "s"], "8":["t", "u", "v"], "9":["w", "x", "y", "z"]}
        
        def dfs(idx):
            if idx==0:
                return []
            num = digits[idx]
            current = l_dict[num]
            if idx == -1:
                return current
            
            last = dfs(idx+1)
            return [j+i for i in last for j in current]
        
        digits = [i for i in digits]
        L = len(digits)
        return dfs(-L)
        
